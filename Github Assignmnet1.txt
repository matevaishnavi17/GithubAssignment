
vganeshm@LIN24006479 MINGW64 ~
$ cd project_dir

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git checkout main
error: pathspec 'main' did not match any file(s) known to git

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git branch

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git init
Reinitialized existing Git repository in C:/Users/VGANESHM/project_dir/.git/

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ touch index.html

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.html
        new file:   info.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html
        deleted:    info.txt


vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ touch info.txt

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.html
        new file:   info.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html


vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git add .

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git commit -m "first commit"
[master (root-commit) b5d6c43] first commit
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 index.html
 create mode 100644 info.txt

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git congig --global user.username matevaishnavi17
git: 'congig' is not a git command. See 'git --help'.

The most similar command is
        config

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git config --global user.username matevaishnavi17

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git push origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 237 bytes | 237.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/matevaishnavi17/GithubAssignments.git
 * [new branch]      master -> master

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git log
commit b5d6c43fe10e71c241f08799dd6ea7d6abb507f7 (HEAD -> master, origin/master)
Author: Vaishnavi Ganesh Mate <vaishnavi.ganesh-mate@capgemini.com>
Date:   Thu Dec 29 12:12:38 2022 +0530

    first commit

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git revert
usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>...
   or: git revert (--continue | --skip | --abort | --quit)

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add a Signed-off-by trailer
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --reference           use the 'reference' format to refer to commits


vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git add index.html

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git commit -m "reverting the previous changes made"
[master 9709fcb] reverting the previous changes made
 1 file changed, 16 insertions(+)

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master
nothing to commit, working tree clean

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git push origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 509 bytes | 509.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/matevaishnavi17/GithubAssignments.git
   b5d6c43..9709fcb  master -> master

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ alias add=my_add

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git my_add index.html
git: 'my_add' is not a git command. See 'git --help'.

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git alias=my_add
git: 'alias=my_add' is not a git command. See 'git --help'.

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git config --global alias.my_add add
error: invalid key: alias.my_add

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git revert
usage: git revert [--[no-]edit] [-n] [-m <parent-number>] [-s] [-S[<keyid>]] <commit>...
   or: git revert (--continue | --skip | --abort | --quit)

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add a Signed-off-by trailer
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --reference           use the 'reference' format to refer to commits


vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git config --global alias 'add.'
error: key does not contain a section: alias

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git config --global alias.add my_add

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git my_add index.html
git: 'my_add' is not a git command. See 'git --help'.

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git config --global alias.my-add add

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git my-add index.html

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   index.html


vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git commit -m "Rename add command to my-add"
[master b92e268] Rename add command to my-add
 1 file changed, 1 insertion(+), 1 deletion(-)

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git status
On branch master
nothing to commit, working tree clean

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ commit log
bash: commit: command not found

vganeshm@LIN24006479 MINGW64 ~/project_dir (master)
$ git log
commit b92e268a067f7353b40269700140ee727ac0bc35 (HEAD -> master)
Author: Vaishnavi Ganesh Mate <vaishnavi.ganesh-mate@capgemini.com>
Date:   Thu Dec 29 16:12:29 2022 +0530

    Rename add command to my-add

commit 9709fcbc3796901a8bd6b3498386abfaad0af9e8 (origin/master)
Author: Vaishnavi Ganesh Mate <vaishnavi.ganesh-mate@capgemini.com>
Date:   Thu Dec 29 12:34:00 2022 +0530

    reverting the previous changes made

commit b5d6c43fe10e71c241f08799dd6ea7d6abb507f7
Author: Vaishnavi Ganesh Mate <vaishnavi.ganesh-mate@capgemini.com>
Date:   Thu Dec 29 12:12:38 2022 +0530

    first commit
